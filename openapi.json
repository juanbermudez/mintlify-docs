{
  "openapi": "3.0.3",
  "info": {
    "title": "Hotel PMS Integration API",
    "description": "A REST API for accessing and managing hotel PMS data (blocks, reservations, inventory, etc.)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.yourpms.com/v1",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/blocks": {
      "get": {
        "summary": "List Blocks",
        "operationId": "listBlocks",
        "description": "Retrieve a list of blocks. Supports filtering and pagination.",
        "tags": [
          "Block"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter blocks by status.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return.",
            "schema": {
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for the next set of results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of blocks.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Block",
        "operationId": "createBlock",
        "description": "Create a new block with the provided details.",
        "tags": [
          "Block"
        ],
        "requestBody": {
          "description": "Block object to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Block created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/blocks/{block_id}": {
      "get": {
        "summary": "Retrieve a Block",
        "operationId": "getBlock",
        "description": "Get details of a specific block by ID.",
        "tags": [
          "Block"
        ],
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "description": "The ID of the block (PMS BLOCK_ID)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the requested block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Block",
        "operationId": "updateBlock",
        "description": "Update fields of an existing block.",
        "tags": [
          "Block"
        ],
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the block."
          }
        ],
        "requestBody": {
          "description": "Fields to update on the block.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Block updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Block",
        "operationId": "deleteBlock",
        "description": "Delete a block by its ID.",
        "tags": [
          "Block"
        ],
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the block."
          }
        ],
        "responses": {
          "200": {
            "description": "Block deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    },
                    "block_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/block_inventories": {
      "get": {
        "summary": "List Block Inventories",
        "operationId": "listBlockInventories",
        "description": "Retrieve a list of block inventories. Supports filtering by date or unit_type_code.",
        "tags": [
          "Block Inventory"
        ],
        "parameters": [
          {
            "name": "unit_type_code",
            "in": "query",
            "description": "Filter by unit type code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return.",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of block inventories.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockInventoryList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a Block Inventory",
        "operationId": "createBlockInventory",
        "description": "Create a new block inventory record associated with a block.",
        "tags": [
          "Block Inventory"
        ],
        "requestBody": {
          "description": "Block Inventory object to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockInventoryCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Block inventory created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockInventory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/block_inventories/{id}": {
      "get": {
        "summary": "Retrieve a Block Inventory",
        "operationId": "getBlockInventory",
        "description": "Get details of a specific block inventory by ID. Includes the associated block object.",
        "tags": [
          "Block Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the block inventory.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the requested block inventory.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockInventory"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block inventory not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a Block Inventory",
        "operationId": "updateBlockInventory",
        "description": "Update fields of an existing block inventory.",
        "tags": [
          "Block Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the block inventory."
          }
        ],
        "requestBody": {
          "description": "Fields to update on the block inventory.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockInventoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Block inventory updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockInventory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block inventory not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Block Inventory",
        "operationId": "deleteBlockInventory",
        "description": "Delete a block inventory record by ID.",
        "tags": [
          "Block Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the block inventory."
          }
        ],
        "responses": {
          "200": {
            "description": "Block inventory deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Block inventory not found."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Block": {
        "type": "object",
        "properties": {
          "property_id": {
            "type": "integer"
          },
          "block_id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "notification_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "block_inventory_type": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "start_shoulder_date": {
            "type": "string",
            "format": "date"
          },
          "end_shoulder_date": {
            "type": "string",
            "format": "date"
          },
          "absolute_cutoff_date": {
            "type": "string",
            "format": "date"
          },
          "release_days_before_stay_date": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "created_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "last_modified_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "last_modified_by": {
            "type": "string"
          },
          "guarantee_code": {
            "type": "string"
          },
          "reservation_pick_up_method": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "payment_method_code": {
            "type": "string"
          }
        },
        "required": [
          "property_id",
          "block_id",
          "code",
          "type",
          "start_date",
          "end_date",
          "status"
        ]
      },
      "BlockList": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Block"
            }
          },
          "has_more": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "BlockCreateRequest": {
        "type": "object",
        "properties": {
          "property_id": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "property_id",
          "code",
          "type",
          "start_date",
          "end_date",
          "status"
        ]
      },
      "BlockUpdateRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "BlockInventory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "property_id": {
            "type": "integer"
          },
          "block_id": {
            "type": "string"
          },
          "unit_type_code": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "absolute_cutoff_date": {
            "type": "string",
            "format": "date"
          },
          "release_days_before_stay_date": {
            "type": "integer"
          },
          "blocked_count": {
            "type": "integer"
          },
          "picked_up_count": {
            "type": "integer"
          },
          "block": {
            "$ref": "#/components/schemas/Block"
          }
        },
        "required": [
          "property_id",
          "block_id",
          "unit_type_code",
          "start_date",
          "end_date"
        ]
      },
      "BlockInventoryList": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockInventory"
            }
          },
          "has_more": {
            "type": "boolean"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "BlockInventoryCreateRequest": {
        "type": "object",
        "properties": {
          "property_id": {
            "type": "integer"
          },
          "block_id": {
            "type": "string"
          },
          "unit_type_code": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "blocked_count": {
            "type": "integer"
          }
        },
        "required": [
          "property_id",
          "block_id",
          "unit_type_code",
          "start_date",
          "end_date"
        ]
      },
      "BlockInventoryUpdateRequest": {
        "type": "object",
        "properties": {
          "unit_type_code": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          },
          "blocked_count": {
            "type": "integer"
          },
          "picked_up_count": {
            "type": "integer"
          }
        }
      }
    }
  }
}